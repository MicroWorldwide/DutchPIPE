INTRODUCTION
    The universe object, constructed from the DpUniverse class in
    lib/dpuniverse.php, is the most important object in the system. It keeps
    track of all objects and simulates core concepts such as objects being able
    to contain other objects, timeouts, and so on.

    There are a number of important functions you can call in the universe
    object.

    You can obtain a reference to the universe object with:
    get_current_dpuniverse()

    Example usage (from dpuniverse/page/index.php):
    > public function createDpPage()
    > {
    >     $this->setTitle('Home');
    >     <removed>
    >
    >     // Creates a note, moves it here:
    >     $note = get_current_dpuniverse()->newDpObject(DPUNIVERSE_OBJ_PATH
    >         . 'note.php');
    >     $note->moveDpObject($this);
    >
    >     <removed>
    > }

CALLABLE FUNCTIONS
    /**
     * Creates a new object in the universe
     *
     * You MUST call this function to create new objects in a DutchPIPE
     * universe, don't use the 'new' construct directly.
     *
     * @param      string    $pathname   path to code from universe base path
     * @param      boolean   $proxy      expirimental, ignore
     * @return     object    The newly created object
     */
    function &newDpObject($pathname, $proxy = FALSE)

    /**
     * Finds an object in the universe with the given unique id
     *
     * @param      string    $unique_id  the object's unique string id
     * @return     mixed     Object reference if found, FALSE otherwise
     */
    function &findDpObject($unique_id)

    /**
     * Finds or makes an object in the universe with the given pathname
     *
     * If an object with the given pathname exists, a reference to that object
     * is returned. Otherwise a new instance of the class found at $pathname
     * is created and returned.
     *
     * @param      string    $pathname   a path within dpuniverse/
     * @param      boolean   $proxy      experimental, ignore
     * @return     object    Reference to instance of $pathname
     */
    function &getDpObject($pathname, $proxy = FALSE)

    /**
     * Finds the user with the given user name or id.
     *
     * @param       string   $name   user name or id of player
     * @return      object|boolean   The found player or FALSE if not found
     */
    function &findUser($name)

    /**
     * Gets an array with user object references of all users on this site
     *
     * @return     array     user object references of all users
     */
    function &getUsers()
