BUILDING NON PLAYING CHARACTERS
    You can build an NPC in two ways:
    1) Make a new instance of DpNpc and call methods in it to set it
    up. For simple NPCs, this is all that is needed. For example:

    > $ob = get_current_dpuniverse()->newDpObject(DPUNIVERSE_STD_PATH
    >     . 'DpObject.php');
    > $ob->addId('barkeeper');
    > $ob->setTitle('barkeeper');
    > $ob->setTitleImg(DPUNIVERSE_IMAGE_URL . 'barkeeper.gif');
    > $ob->setBody('<img src="' . DPUNIVERSE_IMAGE_URL
    >     . 'barkeeper_body.gif" width="125" height="200" border="0" alt="" '
    >     . 'align="left" style="margin-right: 15px" />The barkeeper is '
    >     . 'serving free beer!<br />');

    2) My making a custom class that extends on DpNpc.

    File: dpuniverse/npc/barkeeper.php
    > inherit(DPUNIVERSE_STD_PATH . 'DpNpc.php');
    >
    > public function createDpNpc()
    > {
    >     // Standard setup calls:
    >     $this->addId('barkeeper');
    >     $this->setTitle('barkeeper');
    >     $this->setTitleImg(DPUNIVERSE_IMAGE_URL . 'barkeeper.gif');
    >     $this->setBody('<img src="' . DPUNIVERSE_IMAGE_URL
    >         . 'barkeeper_body.gif" width="125" height="200" border="0" '
    >         . 'alt="" align="left" style="margin-right: 15px" />The '
    >         . 'barkeeper is serving free beer!<br />');
    >     etc.
    >}

    The class name should be the same as the filename, with the first
    letter capitalized.

    Note that because of PHP namespace limitations, currently the
    classname must be unique in your universe. We plan on supporting
    auto-class names.

    There are various methods you can call (like setTitle) or define
    (like createDpNpc) which will be discussed next.

DPOBJECT
    First of all, DpNpcs.php inherits DpObject.php which implements
    common object functionality, so all definable methods and callable
    methods made available by DpObject are also available when
    creating a NPC.

    If you haven't done so, you should first read the DpObject
    documentation.

DPLIVING
    Also, DpUser and DpNPC both inherit DpLiving, common code for users
    and computer generated characters.

    If you haven't done so, you should first read the DpLiving
    documentation.

DEFINABLE METHODS
    When you create an object with the second option, the following
    methods are called by the system when you have implemented them:

    - public function createDpNpc()

    Called when the object is created. You should use this to call the
    setup methods instead of __construct.

    - public function resetDpNpc()

    The class name should be the same as the filename, with the first
    letter capitalized.

    Note that because of PHP namespace limitations, currently the
    classname must be unique in your universe. We plan on supporting
    auto-class names.

    There are various methods you can call (like setTitle) or define
    (like createDpPage) which will be discussed next.

CALLABLE METHODS
    /**
     * Tells data (message, window, location, ...) to this NPC
     *
     * Tells a message to this object, for instance a chat line.
     *
     * @param      string    $data      message string
     */
    function tell($data)

